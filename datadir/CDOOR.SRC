#define OPEN_DOOR 0
#define WOODEN_DOOR 1
#define SHUTTER_DOOR 2
#define BOSS_DOOR 3

//-----------------------------------------------------------------------
int ChangeRoom(int next_room, int respawn)
  int self, target, i, current_room, old_target, script_file, owner, target_owner
  int found, index, new_spin, old_spin, spin
  float x, y, z, pushback

  self = FindSelf()
  old_target = self.target
  current_room = MAPGEN.GetCurrentRoom()


  if(respawn)
    x = 0.0
    y = 0.0
    z = 0.0
  else
    x = MAPGEN.GetRoomDoorXYZ(next_room, current_room, 0, -40.0)
    y = MAPGEN.GetRoomDoorXYZ(next_room, current_room, 1, -40.0)
    z = MAPGEN.GetRoomDoorXYZ(next_room, current_room, 2, -40.0)


  // Go through all of the characters, looking for reserved
  // ones that are no longer needed...  Also look for chests
  // and crates and barrels and statues...
  found = 0 // Number of crates and stuff...
  i = 0
  while(i < MAX_CHARACTER)
    target = FindByIndex(i)
    if(target)
      // Is it a chest or crate or barrel or statue???
      script_file = SystemGet(SYS_CHARACTERSCRIPTFILE, 0, i)
      if(script_file == "FILE:CCHEST.RUN" || script_file == "FILE:CCRATE.RUN" || script_file == "FILE:CBARREL.RUN" || script_file == "FILE:CSTATUE.RUN")
        found++
    else
      if(SystemGet(SYS_RESERVECHARACTER, i, 0) == 255)
        // Characters reserved by PTRAP should be respawned,
        // since they'll need to go in the map object list
        // thing...  And stuff...
        SystemSet(SYS_RESPAWNCHARACTER, 0, 0, i)
        SystemSet(SYS_RESERVECHARACTER, FALSE, 0, i)
      else
        if(SystemGet(SYS_RESERVECHARACTER, i, 0))
          SystemSet(SYS_RESPAWNCHARACTER, 0, 0, i)
          target = FindByIndex(i)
          if(target)
            if(target.team != TEAM_GOOD)
              SystemSet(SYS_RESERVECHARACTER, FALSE, 0, i)
            self.target = i
            GoPoof(POOF_TARGET)
    i++



  // Record all of the characters...
  SystemSet(SYS_MAPOBJECTRECORD, 0, 0, 0)


  // Cost players some dilligence if they left any stuff...
  if(found)
    i = 0
    while(i < 4)
      index = SystemGet(SYS_LOCALPLAYER, i, 0)
      ExperienceFunction(index, EXPERIENCE_VIRTUE_DILLIGENCE, -found, FALSE)
      i++



  // Move characters into next room (actually moved a bit further first so camera scrolls right)
  i = 0
  while(i < MAX_CHARACTER)
    target = FindByIndex(i)
    if(target && target != self)
      if(target.team == TEAM_GOOD)
        target_owner = FindByIndex(target.owner)
        if(!target_owner)
          target_owner = target
        if(IndexIsLocalPlayer(i) || ((IndexIsLocalPlayer(target.owner) || IndexIsLocalPlayer(target_owner.owner)) && !respawn))
          target.x = x
          target.y = y
          target.z = z
        else
          self.target = i
          GoPoof(POOF_TARGET)
      else
        self.target = i
        GoPoof(POOF_TARGET)
    i++
  SystemSet(SYS_CAMERARESET, 0, 0, 0)


  // Make sure invisibility/hide doesn't mess up...
  i = 0
  while(i < MAX_PARTICLE)
    target = FindParticle(i)
    if(target)
      script_file = SystemGet(SYS_PARTICLESCRIPTFILE, 0, i)
      if(script_file == "FILE:PINVIS.RUN")
        owner = FindByIndex(target.owner)
        if(owner)
          if(owner.eflags & ENCHANT_FLAG_INVISIBLE)
            // Invisible chars stay that way...
            owner.alpha = 32
          else
            // Hidden chars revert to being visible...
            owner.alpha = 255
    i++


  // Figger camera spin stuff...
  if(respawn)
    new_spin = 0
  else
    MAPGEN.GetRoomDoorXYZ(next_room, current_room, 0, 8.0)
    old_spin = self.spin
    new_spin = MAPGEN.GetRoomDoorSpin()
    spin = SystemGet(SYS_CAMERASPIN, 0, 0) - new_spin + (old_spin+32768)
    SystemSet(SYS_CAMERASPIN, 0, 0, spin)



  // Move characters to final location in next room...
  // Also make surve their targets are okay...
  // Also end levitate...
  GoPoof(POOF_ALL_PARTICLES)
  i = 0
  while(i < MAX_CHARACTER)
    target = FindByIndex(i)
    if(target && target != self)
      if(respawn)
        x = 0.0
        y = 0.0
        z = 0.0
      else
        pushback = 8.0 - target.boxsize
        x = MAPGEN.GetRoomDoorXYZ(next_room, current_room, 0, pushback)
        y = MAPGEN.GetRoomDoorXYZ(next_room, current_room, 1, pushback)
        z = MAPGEN.GetRoomDoorXYZ(next_room, current_room, 2, pushback)
// Messes up kart...
//      if(FindByIndex(target.target)==NULL)
//        target.target = MAX_CHARACTER
      if(target.eflags & ENCHANT_FLAG_LEVITATE)
        if(target.flags & CHAR_HOVER_ON)
          target.flags = target.flags | CHAR_GRAVITY_ON
          target.flags = target.flags & (65535 - CHAR_HOVER_ON)
      target.x = x
      target.y = y
      target.z = z
      target.gotox = x
      target.gotoy = y
      target.vx = 0.0
      target.vy = 0.0
      target.vz = 0.0
      target.hoverz = target.z+1.0
      target.spin = new_spin
      target.nctimer = 60
      target.cdtimer = 60
    i++
  MAPGEN.SetCurrentRoom(next_room)
  self.target = old_target


  // Now make sure all characters are up to date...
  i = 0
  while(i < MAX_CHARACTER)
    target = FindByIndex(i)
    if(target)
      SystemSet(SYS_CHARFASTFUNCTION, i, 0, FAST_FUNCTION_MODELSETUP)
      SystemSet(SYS_CHARFASTFUNCTION, i, 0, FAST_FUNCTION_DEFENSERATING)
    i++



//-----------------------------------------------------------------------
int UnlockEffect(int self, int target, int cost_key)
  int subtype, door, unlock_okay

  subtype = self.eqcol01>>6
  unlock_okay = TRUE
  if(target)
    unlock_okay = FALSE
    if(target.team == TEAM_GOOD)
      unlock_okay = TRUE
      if(cost_key)
        unlock_okay = (target.keys > 0)
  if(unlock_okay)
    if(target && cost_key)
      target.keys--

    self.action = ACTION_KNOCK_OUT_BEGIN
    self.evtimer = 20  // Allow characters to walk through after a little bit...
    if(self.setimer > 0)
      self.setimer = 0
      self.action = ACTION_KNOCK_OUT
      self.daction = ACTION_KNOCK_OUT

    // Remember that the door is open for the map...
    door = self.eqcol01&15
    if(door < 5)
      SystemSet(SYS_MAPDOOROPEN, 0, 0, door)


//-----------------------------------------------------------------------
// Open door when unlock'd with a key...
int Event()
  int self, target, target_index, subtype, rider, next_room, current_room, door
  float x, y, dot
  self = FindSelf()
  subtype = self.eqcol01>>6


  if(self.event == EVENT_HIT_CHARACTER && self.daction == ACTION_KNOCK_OUT)
    door = self.eqcol01 & 15
    if(door < 5)
      target_index = SystemGet(SYS_COLLISIONCHAR, 0, 0)
      target = FindByIndex(target_index)
      if(target)
        if(target.z < (self.z + 8.0))
          if(IndexIsLocalPlayer(target_index) || IndexIsLocalPlayer(target.rider))
            dot = self.frontx*target.frontx + self.fronty*target.fronty
            if(dot < 0.0)
              if(MAPGEN.GetNumberOfRooms() > 1)
                current_room = MAPGEN.GetCurrentRoom()
                next_room = MAPGEN.GetRoomDoorDestination(current_room, door)
                ChangeRoom(next_room, FALSE)
                //StopMusic()
                PGAMEMUS.Music(current_room, next_room)
                GoPoof(POOF_SELF)



  if(subtype == OPEN_DOOR)
    self.action = ACTION_KNOCK_OUT
    self.daction = ACTION_KNOCK_OUT
    self.hits = self.hitsmax
    self.hitstap = 0
    self.combo = 0
    return TRUE


  if(self.event == EVENT_HIT_CHARACTER && self.daction != ACTION_KNOCK_OUT && self.action != ACTION_KNOCK_OUT_BEGIN)
    target = FindByIndex(SystemGet(SYS_COLLISIONCHAR, 0, 0))
    if(target)
      if(IndexIsLocalPlayer(target.rider))
        rider = FindByIndex(target.rider)
        if(rider)
          target = rider


      if(subtype == WOODEN_DOOR)
        // If character is on far side of door, unlock it for free...
        x = target.x-self.x
        y = target.y-self.y
        dot = self.frontx*x + self.fronty*y
        if(dot < -1.0)
          // Unlock...
          UnlockEffect(self, target, FALSE)
        else
          // Otherwise it costs a key, and character has to be at correct level...
          if(target.z < (self.z + 8.0))
            UnlockEffect(self, target, TRUE)
      if(subtype == SHUTTER_DOOR)
        // Quick one-way open...
        if(self.daction != ACTION_KNOCK_OUT && self.action != ACTION_KNOCK_OUT_BEGIN)
          x = target.x-self.x
          y = target.y-self.y
          dot = self.frontx*x + self.fronty*y
          if(dot < -1.0)
            if(self.daction != ACTION_STUN)
              self.action = ACTION_STUN_BEGIN
              self.daction = ACTION_STUN
            self.setimer = 20  // Delay before closing...
    return TRUE


  if(self.event == EVENT_SECONDARY_TIMER && self.daction == ACTION_STUN)
    // Close the shutter door...
    self.action = ACTION_STUN_END
    self.daction = ACTION_STAND


  if(self.event == EVENT_TIMER && self.action == ACTION_KNOCK_OUT_BEGIN)
    // Allow characters to walk through door now (only partially open...)
    self.daction = ACTION_KNOCK_OUT
    return TRUE


  if(self.event == EVENT_DAMAGED)
    self.intimer = 20
    self.hits = self.hitsmax
    self.hitstap = 0
    self.combo = 0
    if(self.action == ACTION_STAND && subtype == WOODEN_DOOR)
      // Shake around a bit...
      self.action = ACTION_STUN
      PlaySound("FILE:-CRATE01.RAW", 256, 255)

    return TRUE


//-----------------------------------------------------------------------
int ModelSetup()
  int self, subtype, r, g, b
  self = FindSelf()
  subtype = self.eqcol01>>6


  if(subtype == OPEN_DOOR)
    ModelAssign(self+MODEL_BASE_FILE, "FILE:OPENDOOR.RDY")
    ModelAssign(self+MODEL_BASE_TEX0, "FILE:MPDOOR0.RGB")
    ModelAssign(self+MODEL_BASE_TEX1, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_BASE_TEX2, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_BASE_TEX3, "FILE:WHITE.RGB")
  if(subtype == WOODEN_DOOR)
    ModelAssign(self+MODEL_BASE_FILE, "FILE:WOODDOOR.RDY")
    ModelAssign(self+MODEL_BASE_TEX0, "FILE:MPDOOR0.RGB")
    ModelAssign(self+MODEL_BASE_TEX1, "FILE:=MPDOOR0.RGB")
    ModelAssign(self+MODEL_BASE_TEX2, "FILE:=MPDOOR0.RGB")
    ModelAssign(self+MODEL_BASE_TEX3, "FILE:=MPHINGE.RGB")
  if(subtype == SHUTTER_DOOR)
    ModelAssign(self+MODEL_BASE_FILE, "FILE:SHUTDOOR.RDY")
    ModelAssign(self+MODEL_BASE_TEX0, "FILE:MPDOOR0.RGB")
    ModelAssign(self+MODEL_BASE_TEX1, "FILE:=MPDOOR1.RGB")
    ModelAssign(self+MODEL_BASE_TEX2, "FILE:=MPDOOR1.RGB")
    ModelAssign(self+MODEL_BASE_TEX3, "FILE:WHITE.RGB")
  if(subtype == BOSS_DOOR)
    ModelAssign(self+MODEL_BASE_FILE, "FILE:SHUTDOOR.RDY")
    ModelAssign(self+MODEL_BASE_TEX0, "FILE:MPDOOR0.RGB")
    ModelAssign(self+MODEL_BASE_TEX1, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_BASE_TEX2, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_BASE_TEX3, "FILE:WHITE.RGB")




  r = RollDice(1, 256)-1
  g = RollDice(1, 256)-1
  b = RollDice(1, 256)-1
// !!!BAD!!!
// !!!BAD!!!
// !!!BAD!!!
  r = 205*0.80
  g = 230*0.80
  b = 255*0.80
//  r = 192
//  g = 144
//  b = 96
// !!!BAD!!!
// !!!BAD!!!
// !!!BAD!!!
  ModelAssign(self+MODEL_BASE_COLOR, (r<<16) | (g<<8) | b)

//-----------------------------------------------------------------------
int GetName()
  int self
  self = FindSelf()
  StringClear(NAME_STRING)
  StringAppend(NAME_STRING, "Door", 256)

//-----------------------------------------------------------------------
int Refresh()
  int self, temp
  float x, y, dot
  self = FindSelf()
  x = -0.01 * SystemGet(SYS_MAPSIDENORMAL, 1, 0)
  y = 0.01 * SystemGet(SYS_MAPSIDENORMAL, 0, 0)
  dot = (self.frontx*x) + (self.fronty*y)
  temp = (dot*200.0)+192.0
  if(temp > 255)
    temp = 255
  if(temp < 64)
    temp = 64
  self.alpha = temp
  self.timer = 1

//-----------------------------------------------------------------------
int Spawn()
  int self, subtype, door, i
  self = FindSelf()

  subtype = self.eqcol01>>6
  if(subtype == BOSS_DOOR)
    // Didn't bother to do these yet...
    self.eqcol01 = (self.eqcol01 & 15) | (WOODEN_DOOR << 6)
    subtype = WOODEN_DOOR




  self.team = TEAM_NEUTRAL
  self.boxsize = 7.0
  self.height = 12
  self.flags = CHAR_GRAVITY_ON | CHAR_NO_COLLISION | CHAR_NO_BACKSTAB
  if(subtype != WOODEN_DOOR)
     // Only wooden doors allow arrows to stick in 'em...
    self.flags = self.flags | CHAR_NO_STUCK_PARTS
  self.mflags = MORE_FLAG_DOOR | MORE_FLAG_NOSHADOW
  self.sflags = SCRIPT_NO_POISON | SCRIPT_NO_PETRIFY
  self.vflags = VIRTUE_FLAG_AFTER_WATER
  self.oflags = OTHER_FLAG_NO_MORPH | OTHER_FLAG_NO_HEARTS
  self.deffire = 9
  self.defice = 9
  self.defvolt = 9
  self.timer = 1


  self.vspin = 0
  self.hitsmax = 255
  self.hits = self.hitsmax
  if(subtype == OPEN_DOOR)
    self.action = ACTION_KNOCK_OUT
    self.daction = ACTION_KNOCK_OUT



  // Figger out if the door is open...
  door = self.eqcol01&15
  if(door < 5)
    if(subtype != SHUTTER_DOOR)
      if(SystemGet(SYS_MAPDOOROPEN, 0, door))
        self.action = ACTION_KNOCK_OUT
        self.daction = ACTION_KNOCK_OUT


  ModelSetup()


//-----------------------------------------------------------------------
