#define button_one    self.stat00l
#define scroll        self.stat00h
#define openfile      self.int0203

#define MAX_HISCORE 100
#define MAX_CLASS 8
#define CLASS_MONSTER 254

//-----------------------------------------------------------------------
Spawn()
  int self
  self = FindSelf()
  button_one = 0
  scroll = 0
  openfile = FileOpen("CONFIG.DAT", FILE_NORMAL)
  if(openfile)
    openfile = openfile+384

//-----------------------------------------------------------------------
DeleteEntry(int entry)
  int i, temp, scorefile
  if(entry >= 0 && entry < MAX_HISCORE)
    scorefile = FileOpen("CONFIG.DAT", FILE_NORMAL)
    if(scorefile)
      scorefile = scorefile+384


      // Shuffle up all the entries below...
      entry++
      while(entry < MAX_HISCORE)
        i = 0
        while(i < 20)
          temp = FileReadByte(scorefile, (entry*20)+i)
          FileWriteByte(scorefile, ((entry-1)*20)+i, temp)
          i++
        entry++
      // Add a null entry on the last one...
      i = 0
      while(i < 20)
        FileWriteByte(scorefile, (entry*20)+i, 0)
        i++
      FileWriteByte(scorefile, (entry*20)+18, 255)

//-----------------------------------------------------------------------
InsertEntry(int target, int score, int entry)
  int i, temp, scorefile, current, badge
  if(target && entry >= 0 && entry < MAX_HISCORE)
    scorefile = FileOpen("CONFIG.DAT", FILE_NORMAL)
    if(scorefile)
      scorefile = scorefile+384


      // Shuffle down all the entries below...
      current = MAX_HISCORE
      while(current > entry)
        current--
        i = 0
        while(i < 20)
          temp = FileReadByte(scorefile, ((current-1)*20)+i)
          FileWriteByte(scorefile, (current*20)+i, temp)
          i++
      // Add the new entry
      i = 0
      while(i < 20)
        FileWriteByte(scorefile, (entry*20)+i, 0)
        i++
      StringAppend(scorefile+(entry*20), target.name, 16)
      FileWriteByte(scorefile, (entry*20)+15, 0)  // Make sure it's null terminated...
      FileWriteByte(scorefile, (entry*20)+16, score>>8)
      FileWriteByte(scorefile, (entry*20)+17, score&255)
      if(target.class < MAX_CLASS)
        if(SystemGet(SYS_CHARACTERSCRIPTFILE, 0, FindIndex(target)) == "FILE:CPLAYER.RUN")
          FileWriteByte(scorefile, (entry*20)+18, target.class)
        else
          FileWriteByte(scorefile, (entry*20)+18, CLASS_MONSTER)
      else
        FileWriteByte(scorefile, (entry*20)+18, CLASS_MONSTER)

      badge = 0
      if(target.vircomp==255)
        badge = badge|1
      if(target.virdill==255)
        badge = badge|2
      if(target.virhono==255)
        badge = badge|4
      if(target.virfait==255)
        badge = badge|8
      if(target.vircour==255)
        badge = badge|16
      badge = badge | (target.eqcol01&128)
      FileWriteByte(scorefile, (entry*20)+19, badge)

//-----------------------------------------------------------------------
AddCharacter(int target_index)
  int target, i, target_score, score, scorefile, class, target_class

  target = FindByIndex(target_index)
  if(target && IndexIsLocalPlayer(target_index))
    scorefile = FileOpen("CONFIG.DAT", FILE_NORMAL)
    if(scorefile && !StringCompare(target.name, "Test"))
      scorefile = scorefile+384


      target_score = target.exp
      target_score = target_score + (target.vircomp<<1)
      target_score = target_score + (target.virdill<<1)
      target_score = target_score + (target.virhono<<1)
      target_score = target_score + (target.virfait<<1)
      target_score = target_score + (target.vircour<<1)
      target_score = target_score + target.money


      // Check against each entry, starting from the bottom...
      // Look for duplicate name & class...
      target_class = CLASS_MONSTER
      if(target.class < MAX_CLASS)
        if(SystemGet(SYS_CHARACTERSCRIPTFILE, 0, FindIndex(target)) == "FILE:CPLAYER.RUN")
          target_class = target.class



      i = 100
      while(i > 0)
        i--
        class = FileReadByte(scorefile, (i*20)+18)
        if(class == target_class)
          if(StringCompare(target.name, scorefile+(i*20)))
            // Looks like we're trying for a duplicate entry...
            score = (FileReadByte(scorefile, (i*20)+16)<<8) + FileReadByte(scorefile, (i*20)+17)
            if(score > target_score)
              // Existing entry is better, so we'll keep it...
              return FALSE
            // Delete the existing entry...
            DeleteEntry(i)
            i = 0


      // Check against each entry, starting from the bottom...
      i = 100
      while(i > 0)
        i--
        score = (FileReadByte(scorefile, (i*20)+16)<<8) + FileReadByte(scorefile, (i*20)+17)
        if(score > target_score)
          // Oops, the current entry has a higher score, so let's insert below...
          i++
          InsertEntry(target, target_score, i)
          return TRUE
        else
          if(i == 0)
            // We got the high score!
            InsertEntry(target, target_score, i)
            return TRUE

//-----------------------------------------------------------------------
Refresh()
  int    self, i, entry, score, class, badge
  float  x, y
  float screenx

  screenx = SystemGet(SYS_SCREENPARAMS, 0, 2)

  // Allow us to save data in the window's properties...
  self = FindSelf()


  // Button actions
  if(button_one == 250)
    ButtonSound()
    Spawn(WINDOW, screenx / 2, 150.0, 1.0, "FILE:WMAIN.RUN")
    GoPoof(POOF_SELF)


  // Title bar
  TitleBar(FALSE, 0.0, -12.0, "High Score Table")


  // Headers
  WindowBorder(FALSE, -18.0, -10.0-1.7, 36, 1, BORDER_TITLE)
  TitleBar(FALSE, -14.0, -10.0, "Name")
  TitleBar(FALSE, 0.0, -10.0, "Score")
  TitleBar(FALSE, 7.0, -10.0, "Class")



  // Button images
  WindowBorder(FALSE, -10.0, 10.7, 20, 2, BORDER_LOW_TITLE)
  button_one = ButtonImage(button_one,0.0,0.2,20.0,2.0, StringLanguage(22))


  // Main window
  WindowBorder(FALSE, -20.0, -10.0, 40, 20, BORDER_FULL)


  // Scrollbar...
  scroll = WindowSlider(39.0, 0.0, 1, 20, scroll)


  // Listing...
  if(openfile)
    i = 0
    entry = ((scroll*81)>>8) + 19
    y = 19.0
    while(i < 20 && entry < MAX_HISCORE)
      score = (FileReadByte(openfile, (entry*20)+16)<<8) + FileReadByte(openfile, (entry*20)+17)
      class = FileReadByte(openfile, (entry*20)+18)
      badge = FileReadByte(openfile, (entry*20)+19)

      if(class < MAX_CLASS || class == 254)
        StringClear(String(0))
        if(entry < 9)
          StringAppend(String(0), " ", 255)
        if(entry < 99)
          StringAppend(String(0), " ", 255)
        StringAppendNumber(String(0), entry+1, 255)
        StringAppend(String(0), ".", 255)
        WindowString(WHITE, 0.0, y, String(0))


        if(FileReadByte(openfile, (entry*20)))
          StringClear(String(0))
          StringAppend(String(0), openfile+(entry*20), 15)
          WindowString(WHITE, 4.0, y, String(0))


          StringClear(String(0))
          StringAppendNumber(String(0), score, 255)
          CenterString(WHITE, 20.0, y, String(0))


          StringClear(String(0))
          if(class < MAX_CLASS)
            if((badge & 128) && class == CLASS_ELF)
              StringAppend(String(0), "Jive ", 255)
            StringAppend(String(0), StringLanguage(84+class), 255)
          else
            StringAppend(String(0), "MONSTER", 255)
          CenterString(WHITE, 27.0, y, String(0))


          x = 31.0
          if(badge & 1)
            WindowMegaImage(x,y,  x+2.0,y,  x+2.0,y+1.0,  x,y+1.0,  0.0,0.35,  1.0,1.0,  white, ALPHA_NONE, "FILE:=BADCOMP.RGB")
            WindowImage(x, y-0.5, 2.0, 2.0, NULL, StringLanguage(78), 255)
            x = x+1.4

          if(badge & 2)
            WindowMegaImage(x,y,  x+2.0,y,  x+2.0,y+1.0,  x,y+1.0,  0.0,0.35,  1.0,1.0,  white, ALPHA_NONE, "FILE:=BADDILL.RGB")
            WindowImage(x, y-0.5, 2.0, 2.0, NULL, StringLanguage(79), 255)
            x = x+1.4

          if(badge & 4)
            WindowMegaImage(x,y,  x+2.0,y,  x+2.0,y+1.0,  x,y+1.0,  0.0,0.35,  1.0,1.0,  white, ALPHA_NONE, "FILE:=BADHONO.RGB")
            WindowImage(x, y-0.5, 2.0, 2.0, NULL, StringLanguage(80), 255)
            x = x+1.4

          if(badge & 8)
            WindowMegaImage(x,y,  x+2.0,y,  x+2.0,y+1.0,  x,y+1.0,  0.0,0.35,  1.0,1.0,  white, ALPHA_NONE, "FILE:=BADFAIT.RGB")
            WindowImage(x, y-0.5, 2.0, 2.0, NULL, StringLanguage(81), 255)
            x = x+1.4

          if(badge & 16)
            WindowMegaImage(x,y,  x+2.0,y,  x+2.0,y+1.0,  x,y+1.0,  0.0,0.35,  1.0,1.0,  white, ALPHA_NONE, "FILE:=BADCOUR.RGB")
            WindowImage(x, y-0.5, 2.0, 2.0, NULL, StringLanguage(82), 255)
            x = x+1.4


      y = y - 1.0
      entry--
      i++


//-----------------------------------------------------------------------
